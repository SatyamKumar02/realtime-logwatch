
services:
  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/logwatch
      - KAFKA_BOOTSTRAP=kafka:9092
    depends_on:
      - mongo
      - kafka
    volumes:
      - .:/app

  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    container_name: kafka-consumer
    depends_on:
      - kafka
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/logwatch
      - KAFKA_BOOTSTRAP=kafka:9092
    volumes:
      - .:/app

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongo
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kowl:
    image: quay.io/cloudhut/kowl:latest
    container_name: kowl
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: always

volumes:
  mongo_data:
